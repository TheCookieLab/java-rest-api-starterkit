{
 "model": {
    "kind": "model",
    "name": "failover",
    "title": "Failover",
    "description": "Failover load balancer",
    "javaType": "org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition",
    "label": "configuration,loadbalance",
    "input": "false",
    "output": "false"
  },
  "properties": {
    "exception": { "kind": "element", "required": "false", "type": "array", "javaType": "java.util.List<java.lang.String>", "deprecated": "false", "description": "A list of class names for specific exceptions to monitor. If no exceptions is configured then all exceptions is monitored" },
    "roundRobin": { "kind": "attribute", "required": "false", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "defaultValue": "false", "description": "Whether or not the failover load balancer should operate in round robin mode or not. If not then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If round robin is enabled then it keeps state and will continue with the next endpoint in a round robin fashion. When using round robin it will not stick to last known good endpoint it will always pick the next endpoint to use." },
    "maximumFailoverAttempts": { "kind": "attribute", "required": "false", "type": "integer", "javaType": "java.lang.Integer", "deprecated": "false", "defaultValue": "-1", "description": "A value to indicate after X failover attempts we should exhaust (give up). Use -1 to indicate never give up and continuously try to failover. Use 0 to never failover. And use e.g. 3 to failover at most 3 times before giving up. his option can be used whether or not roundRobin is enabled or not." },
    "id": { "kind": "attribute", "required": "false", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Sets the value of the id property." }
  }
}

